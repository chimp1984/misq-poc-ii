/*
 * This file is part of Bisq.
 *
 * Bisq is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or (at
 * your option) any later version.
 *
 * Bisq is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Bisq. If not, see <http://www.gnu.org/licenses/>.
 */
syntax = "proto3";
// The conventional 'package' option and the 'java_package' options are defined.
// In java projects, 'java_package' option overrides 'package'.
// See https://developers.google.com/protocol-buffers/docs/reference/java-generated
package grpc.proto;
option java_package = "org.misq.grpc.proto";
option java_multiple_files = true;

import "p2p.proto";
import "wallet-installer.proto";

///////////////////////////////////////////////////////////////////////////////////////////
// Help
///////////////////////////////////////////////////////////////////////////////////////////

service Help {
    rpc GetMethodHelp (GetMethodHelpRequest) returns (GetMethodHelpReply) {
    }
}

message GetMethodHelpRequest {
    string methodName = 1;
}

message GetMethodHelpReply {
    string methodHelp = 1;
}

///////////////////////////////////////////////////////////////////////////////////////////
// P2P
///////////////////////////////////////////////////////////////////////////////////////////

service P2P {
    rpc GetPeers (GetPeersRequest) returns (GetPeersReply) {
    }
}

message GetPeersRequest {
}

message GetPeersReply {
    p2p.proto.PeersResponse peersResponse = 1;
}

///////////////////////////////////////////////////////////////////////////////////////////
// Version
///////////////////////////////////////////////////////////////////////////////////////////

service GetVersion {
    rpc GetVersion (GetVersionRequest) returns (GetVersionReply) {
    }
}

message GetVersionRequest {
}

message GetVersionReply {
    string version = 1;
}

///////////////////////////////////////////////////////////////////////////////////////////
// Wallet Installer
///////////////////////////////////////////////////////////////////////////////////////////

service WalletInstaller {
    rpc InstallWallet (InstallWalletRequest) returns (InstallWalletReply) {
    }
}

message InstallWalletRequest {
    wallet.install.proto.WalletType walletType = 1;
}

message InstallWalletReply {
    string status = 1;
}


///////////////////////////////////////////////////////////////////////////////////////////
// Wallets
///////////////////////////////////////////////////////////////////////////////////////////

service Wallets {
    rpc GetBalance (GetBalanceRequest) returns (GetBalanceReply) {
    }
}

message GetBalanceRequest {
}

message GetBalanceReply {
    uint64 balance = 1;
}
