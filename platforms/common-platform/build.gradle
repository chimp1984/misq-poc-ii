plugins {
    id 'java-platform'
    id 'maven-publish'
}

dependencies {
    constraints {
        // The api configuration should be used to declare constraints and
        // dependencies which should be used when compiling against the platform.

        /////////////////////////////////////////////////////////////////////////////////
        // Annotation dependency constraints
        /////////////////////////////////////////////////////////////////////////////////
        api('javax.annotation:javax.annotation-api') {
            version { require '1.3.2' }
        }
        //  api "javax.annotation:javax.annotation-api:$javaxAnnotationVersion"

        /////////////////////////////////////////////////////////////////////////////////
        // Protobuf dependency constraints
        /////////////////////////////////////////////////////////////////////////////////
        api('com.google.protobuf:protobuf-gradle-plugin') {
            version { require '0.8.16' }
        }
        api('com.google.protobuf:protobuf-java') {
            version { require '3.12.4' }
        }

        /////////////////////////////////////////////////////////////////////////////////
        // Guava and transitive dependency constraints
        /////////////////////////////////////////////////////////////////////////////////
        api('com.google.guava:guava') {
            version { require '30.1.1-jre' }
        }
        // Declaring the guava dependency above will bring in the transitive dependencies below.
        // If some other dependency brings in other versions of the transitive dependencies below,
        // they should be excluded.
        api('org.checkerframework:checker-qual') {
            version { require '3.13.0' }
        }
        api('com.google.code.findbugs:jsr305') {
            version { require '3.0.2' }
        }
        api('com.google.errorprone:error_prone_annotations') {
            version { require '2.5.1' }
        }
        api('com.google.j2objc:j2objc-annotations') {
            version { require '1.3' }
        }
        api('com.google.guava:failureaccess') {
            version { require '1.0.1' }
        }
        api('com.google.guava:listenablefuture') {
            version { require '9999.0-empty-to-avoid-conflict-with-guava' }
        }

        /////////////////////////////////////////////////////////////////////////////////
        // Gson dependency constraints
        /////////////////////////////////////////////////////////////////////////////////
        api('com.google.code.gson:gson') {
            version { require '2.8.6' }
        }


        /////////////////////////////////////////////////////////////////////////////////
        // Logging dependency constraints
        /////////////////////////////////////////////////////////////////////////////////
        api('org.slf4j:slf4j-api') {
            version { require '1.7.30' }
        }
        api('ch.qos.logback:logback-core') {
            version { require '1.2.3' }
        }
        api('ch.qos.logback:logback-classic') {
            version { require '1.2.3' }
        }

        // The runtime configuration should be used to declare
        // constraints or dependencies which are visible at runtime.
        runtime('org.slf4j:slf4j-api') {
            version { require '1.7.30' }
        }
    }
}
