plugins {
    id 'java-library'
    id 'application'
    id 'distribution'
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

version '0.0.1-SNAPSHOT'

application {
    project.mainClassName = 'org.misq.bitcoinj.application.DynamicBitcoinjLoadingDemo'
}

dependencies {
    implementation platform(project(':platforms:common-platform'))
    implementation platform(project(':platforms:bitcoinj-platform'))
    implementation platform(project(':platforms:reactive-platform'))

    // Reactive Deps
    implementation 'io.reactivex.rxjava2:rxjava'
    implementation 'org.reactivestreams:reactive-streams'

    api(project(':common'))

    api(project(':wallets:wallet-installer'))
    api(project(':wallets:bitcoinj:bitcoinj-api'))
    api(project(':wallets:bitcoinj:bitcoinj-dummy-impl'))


    // The 'bitcoinj-impl' project must be in the classpath to work, but we want to
    // download and dynamically load the classes in the bitcoinj jar instead.
    // Comment the line below when bitcoinj and bitcoin-spi-impl classes can be dynamically loaded.
    // api(project(':wallets:bitcoinj:bitcoinj-impl'))


    implementation 'org.slf4j:slf4j-api'
    implementation 'ch.qos.logback:logback-core'
    implementation 'ch.qos.logback:logback-classic'

    api platform(project(':platforms:test-platform'))
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}
